<%@ page session="true" language="java" contentType="text/html; charset=euc-kr" pageEncoding="euc-kr"%><%/*** 프로젝트명	: 하도급거래 서면실태조사 지원을 위한 개발용역 사업* 프로그램명	: Survey_Query.jsp* 프로그램설명	: 자진시정 등록 프로세스* 프로그램버전	: 2.0.1* 최초작성일자	: 2009년 05월* 작 성 이 력       :*=========================================================*	작성일자		작성자명				내용*=========================================================*	2009-05-00	정광식       최초작성*	2011-10-18	정광식		웹관리툴 리뉴얼*	2015-12-30	정광식		DB변경으로 인한 인코딩 변경*/%><%@ page import="java.sql.*"%><%@ page import="java.util.*"%><%@ page import="ftc.util.*"%><%@ page import="ftc.db.ConnectionResource"%><%@ page import="ftc.db.ConnectionResource2"%><%@ page import="java.text.DecimalFormat"%><%@ include file="/hado/wTools/inc/WB_I_Global.jsp"%><%@ include file="/hado/wTools/inc/WB_I_chkMngSession.jsp"%><%/*---------------------------------------- Variable Difinition ----------------------------------------*/	String sql = StringUtil.checkNull(request.getParameter("sql"));	ConnectionResource resource = null;	Connection conn = null;	PreparedStatement pstmt = null;	ResultSet rs = null;	String sCYear = st_Current_Year;	String sSQLs ="";	String sSQLs1 ="";	String sSQLs2 ="";	String sReturnURL = "";	String tmpStr = "";	String sMsg = "";	String lsu = "";	String lmngno = "";	String lyyyy = "";	String lgb = "";	String nregsn = "0";	String nactno = "0";	String bAction = "T";	int i = 0;	int nx = 0;	int updateCNT = 0;	ckSSOcvno = "" + session.getAttribute("ckSSOcvno");	ckCenterName = "" + session.getAttribute("ckCenterName");	ckDeptName = "" + session.getAttribute("ckDeptName");	ckUserName = "" + session.getAttribute("ckUserName");	ckPhoneNo = "" + session.getAttribute("ckPhoneNo");	ckPermision = "" + session.getAttribute("ckPermision");	java.util.Calendar cal = java.util.Calendar.getInstance();	DecimalFormat formater = new java.text.DecimalFormat("###,###,###,###,###,###,###,##0.0");	DecimalFormat formater2 = new java.text.DecimalFormat("###,###,###,###,###,###,###,##0");/*-----------------------------------------------------------------------------------------------------*//*=================================== Record Selection Processing =====================================*/	if( sql.equals("surveyDelete") ) {		lmngno = StringUtil.checkNull(request.getParameter("sur_omngno"));		lyyyy = StringUtil.checkNull(request.getParameter("sur_oyyyy"));		lgb = StringUtil.checkNull(request.getParameter("sur_ogb"));		sSQLs ="DELETE FROM HADO_TB_Survey \n";		sSQLs+="WHERE mng_no=? AND current_year=? AND oent_gb=? \n";		try {			resource = new ConnectionResource();			conn = resource.getConnection();			pstmt = conn.prepareStatement(sSQLs);			pstmt.setString(1,lmngno);			pstmt.setString(2,lyyyy);			pstmt.setString(3,lgb);			updateCNT = pstmt.executeUpdate();		} catch(Exception e) {			e.printStackTrace();		} finally {			if(rs!=null)		try{rs.close();}	catch(Exception e){}			if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}			if(conn!=null)		try{conn.close();}	catch(Exception e){}			if(resource!=null)	resource.release();		}		sSQLs ="DELETE FROM HADO_TB_Action \n";		sSQLs+="WHERE mng_no=? AND current_year=? AND oent_gb=? \n"; 		try {			resource = new ConnectionResource();			conn = resource.getConnection();			pstmt = conn.prepareStatement(sSQLs);			pstmt.setString(1,lmngno);			pstmt.setString(2,lyyyy);			pstmt.setString(3,lgb);			updateCNT = pstmt.executeUpdate();		} catch(Exception e) {			e.printStackTrace();		} finally {			if(rs!=null)		try{rs.close();}	catch(Exception e){}			if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}			if(conn!=null)		try{conn.close();}	catch(Exception e){}			if(resource!=null)	resource.release();		}		sSQLs ="DELETE FROM HADO_TB_Survey_CTX \n";		sSQLs+="WHERE mng_no=? AND current_year=? AND oent_gb=? \n"; 		try {			resource = new ConnectionResource();			conn = resource.getConnection();			pstmt = conn.prepareStatement(sSQLs);			pstmt.setString(1,lmngno);			pstmt.setString(2,lyyyy);			pstmt.setString(3,lgb);			updateCNT = pstmt.executeUpdate();		} catch(Exception e) {			e.printStackTrace();		} finally {			if(rs!=null)		try{rs.close();}	catch(Exception e){}			if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}			if(conn!=null)		try{conn.close();}	catch(Exception e){}			if(resource!=null)	resource.release();		}	} else if( sql.equals("surveyinput") ) {		lsu = StringUtil.checkNull(request.getParameter("loopsu"));		lmngno = StringUtil.checkNull(request.getParameter("sur_omngno"));		lyyyy = StringUtil.checkNull(request.getParameter("sur_oyyyy"));		lgb = StringUtil.checkNull(request.getParameter("sur_ogb"));		nx = Integer.parseInt(lsu);		// 이전코드 등록이 유효년도를 벗어났는지 확인		tmpStr=StringUtil.checkNull(request.getParameter("h_sctx"));		if( tmpStr.equals("5") && Integer.parseInt(lyyyy)>2008 ) {			bAction = "F";			sMsg = "시정여부의 [부도,소재불명,중복업체등]은 2009년이전만 등록할 수 있습니다.";		}		// 등록코드 관리자 권한여부 확인		if( tmpStr.equals("0") && ckPermision.equals("P") ) {			bAction = "F";			sMsg = "시정여부의 [시정대상 편성 오류]는 관리자이상만 등록할 수 있습니다.";		}		if( bAction.equals("T") ) {			try {				resource = new ConnectionResource();				conn = resource.getConnection();				// 조치결과 등록순번 구하기				sSQLs ="SELECT NVL(MAX(REG_SN)+1,1) MAXSN \n";				sSQLs+="FROM HADO_TB_Survey \n";				sSQLs+="WHERE Mng_No=? \n";				sSQLs+="	AND Current_Year=? \n";				sSQLs+="	AND Oent_GB=? \n";				pstmt = conn.prepareStatement(sSQLs);				pstmt.setString(1,lmngno);				pstmt.setString(2,lyyyy);				pstmt.setString(3,lgb);				rs = pstmt.executeQuery();				if( rs.next() ) {					nregsn = StringUtil.checkNull(rs.getString("MAXSN")).trim();				}				rs.close();			} catch(Exception e) {				e.printStackTrace();			} finally {				if(rs!=null)		try{rs.close();}	catch(Exception e){}				if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}				if(conn!=null)		try{conn.close();}	catch(Exception e){}				if(resource!=null)	resource.release();			}						for( i=1; i<=nx; i++) {				sSQLs1 ="Mng_no";				sSQLs2 ="'" + lmngno + "'";				sSQLs1+=", Current_Year";				sSQLs2+=", '" + lyyyy + "'";				sSQLs1+=", Oent_GB";				sSQLs2+=", '" + lgb + "'";				sSQLs1+=", Q_CD";				sSQLs2+=", " + StringUtil.checkNull(request.getParameter("icd"+i));				sSQLs1+=", Q_GB";				sSQLs2+=", " + StringUtil.checkNull(request.getParameter("igb"+i));				sSQLs1+=", REG_SN";				sSQLs2+=", " + nregsn;				tmpStr = StringUtil.checkNull(request.getParameter("money"+i));				if( !tmpStr.equals("") ) {					sSQLs1+=", violate_gb";					sSQLs2+=", '" + StringUtil.checkNull(request.getParameter("money"+i)) + "'";				}				tmpStr = StringUtil.checkNull(request.getParameter("smoney"+i));				if( !tmpStr.equals("") ) {					sSQLs1+=", violate_amt";					sSQLs2+=", " + StringUtil.checkNull(request.getParameter("smoney"+i)).replaceAll(",","");				} else {					sSQLs1+=", violate_amt";					sSQLs2+=", 0";				}				// 등록자정보				sSQLs1+=", REG_Date";				sSQLs2+=", SYSDATE";				sSQLs1+=", REG_CVSNo";				sSQLs2+=", '" + ckSSOcvno + "'";				sSQLs1+=", REG_Center_Name";				sSQLs2+=", '" + ckCenterName + "'";				sSQLs1+=", REG_User_Name";				sSQLs2+=", '" + ckUserName + "'";				sSQLs ="INSERT INTO HADO_TB_Survey \n";				sSQLs+="	(" + sSQLs1 + ") \n";				sSQLs+="VALUES \n";				sSQLs+="	(" + sSQLs2 + ") \n";				try {					resource = new ConnectionResource();					conn = resource.getConnection();					pstmt = conn.prepareStatement(sSQLs);					updateCNT = pstmt.executeUpdate();				} catch(Exception e) {					e.printStackTrace();				} finally {					if(rs!=null)		try{rs.close();}	catch(Exception e){}					if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}					if(conn!=null)		try{conn.close();}	catch(Exception e){}					if(resource!=null)	resource.release();				}			}			sSQLs1 ="Mng_no";			sSQLs2 ="'" + lmngno + "'";			sSQLs1+=", Current_Year";			sSQLs2+=", '" + lyyyy + "'";			sSQLs1+=", Oent_GB";			sSQLs2+=", '" + lgb + "'";			sSQLs1+=", REG_SN";			sSQLs2+=", " + nregsn;			sSQLs1+=", Correct_Typ";			sSQLs2+=", '" + StringUtil.checkNull(request.getParameter("h_sctx")) + "'";			sSQLs1+=", Correct_AMT";			sSQLs2+=", " + StringUtil.checkNull(request.getParameter("h_ctxmoney1")).replaceAll(",","");			sSQLs1+=", DivCorr_AMT";			sSQLs2+=", " + StringUtil.checkNull(request.getParameter("h_ctxmoney2")).replaceAll(",","");			sSQLs1+=", Pay_Date";			sSQLs2+=", '" + StringUtil.checkNull(request.getParameter("h_ctxdate1")) + StringUtil.checkNull(request.getParameter("h_ctxdate2")) + StringUtil.checkNull(request.getParameter("h_ctxdate3")) + "'";			sSQLs1+=", Subcon_AMT";			sSQLs2+=", " + StringUtil.checkNull(request.getParameter("h_submoney")).replaceAll(",","");			sSQLs1+=", Subcon_Cnt";			sSQLs2+=", " + StringUtil.checkNull(request.getParameter("h_ctxsu2")).replaceAll(",","");			sSQLs1+=", Survey_Const";			sSQLs2+=", '" + StringUtil.checkNull(request.getParameter("h_sconst")).trim().replaceAll("'","''") + "'";			// 등록자정보			sSQLs1+=", REG_Date";			sSQLs2+=", SYSDATE";			sSQLs1+=", REG_CVSNo";			sSQLs2+=", '" + ckSSOcvno + "'";			sSQLs1+=", REG_Center_Name";			sSQLs2+=", '" + ckCenterName + "'";			sSQLs1+=", REG_User_Name";			sSQLs2+=", '" + ckUserName + "'";			sSQLs ="INSERT INTO HADO_TB_Survey_CTX \n";			sSQLs+="	(" + sSQLs1 + ") \n";			sSQLs+="VALUES \n";			sSQLs+="	(" + sSQLs2 + ") \n";			//System.out.println(sSQLs);			try {				resource = new ConnectionResource();				conn = resource.getConnection();								pstmt = conn.prepareStatement(sSQLs);				updateCNT = pstmt.executeUpdate();			} catch(Exception e) {				e.printStackTrace();			} finally {				if(rs!=null)		try{rs.close();}	catch(Exception e){}				if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}				if(conn!=null)		try{conn.close();}	catch(Exception e){}				if(resource!=null)	resource.release();			}			// 조치순번 입력전 기존 정보 삭제 - 20111227 / KS Jung			sSQLs ="DELETE FROM HADO_TB_Action \n";			sSQLs+="WHERE Mng_No=? \n";			sSQLs+="	AND Current_Year=? \n";			sSQLs+="	AND Oent_GB=? \n";						try {				resource = new ConnectionResource();				conn = resource.getConnection();								pstmt = conn.prepareStatement(sSQLs);				pstmt.setString(1,lmngno);				pstmt.setString(2,lyyyy);				pstmt.setString(3,lgb);				updateCNT = pstmt.executeUpdate();			} catch(Exception e) {				e.printStackTrace();			} finally {				if(rs!=null)		try{rs.close();}	catch(Exception e){}				if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}				if(conn!=null)		try{conn.close();}	catch(Exception e){}				if(resource!=null)	resource.release();			}			for( i=1; i<=11; i++) {				tmpStr = StringUtil.checkNull(request.getParameter("h_act"+i));				if( (!tmpStr.equals("")) && (!tmpStr.equals("null")) && tmpStr!=null ) {					// 조치순번 (nactno)					sSQLs ="SELECT NVL(MAX(Action_SEQ)+1,1) seq \n";					sSQLs+="FROM HADO_TB_Action \n";					sSQLs+="WHERE Mng_No=? \n";					sSQLs+="	AND Current_Year=? \n";					sSQLs+="	AND Oent_GB=? \n";					sSQLs+="	AND REG_SN=? \n";					//System.out.println("seq is "+sSQLs);					try {						resource = new ConnectionResource();						conn = resource.getConnection();												pstmt = conn.prepareStatement(sSQLs);						pstmt.setString(1,lmngno);						pstmt.setString(2,lyyyy);						pstmt.setString(3,lgb);						pstmt.setString(4,nregsn);						rs = pstmt.executeQuery();							if( rs.next() ) {							nactno = StringUtil.checkNull(rs.getString("seq")).trim();						}						rs.close();					} catch(Exception e) {						e.printStackTrace();					} finally {						if(rs!=null)		try{rs.close();}	catch(Exception e){}						if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}						if(conn!=null)		try{conn.close();}	catch(Exception e){}						if(resource!=null)	resource.release();					}					sSQLs1 ="Mng_no";					sSQLs2 ="'" + lmngno + "'";					sSQLs1+=", Current_Year";					sSQLs2+=", '" + lyyyy + "'";					sSQLs1+=", Oent_GB";					sSQLs2+=", '" + lgb + "'";					sSQLs1+=", REG_SN";					sSQLs2+=", " + nregsn;					sSQLs1+=", Action_SEQ";					sSQLs2+=", " + nactno;					sSQLs1+=", Action_Type";					sSQLs2+=", '" + StringUtil.checkNull(request.getParameter("h_act"+i)).trim() + "'";					// 등록자정보					sSQLs1+=", REG_Date";					sSQLs2+=", SYSDATE";					sSQLs1+=", REG_CVSNo";					sSQLs2+=", '" + ckSSOcvno + "'";					sSQLs1+=", REG_Center_Name";					sSQLs2+=", '" + ckCenterName + "'";					sSQLs1+=", REG_User_Name";					sSQLs2+=", '" + ckUserName + "'";					sSQLs ="INSERT INTO HADO_TB_Action \n";					sSQLs+="	(" + sSQLs1 + ") \n";					sSQLs+="VALUES \n";					sSQLs+="	(" + sSQLs2 + ") \n";					//System.out.println(sSQLs);					try {						resource = new ConnectionResource();						conn = resource.getConnection();												pstmt = conn.prepareStatement(sSQLs);						updateCNT = pstmt.executeUpdate();					} catch(Exception e) {						e.printStackTrace();					} finally {						if(rs!=null)		try{rs.close();}	catch(Exception e){}						if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}						if(conn!=null)		try{conn.close();}	catch(Exception e){}						if(resource!=null)	resource.release();					}				}			}		}	}%><html><head>	<title></title>	<meta charset="euc-kr">	<script type="text/javascript">	//<![CDATA[		<%if( sql!= null && sql.equals("surveyinput") && bAction.equals("T") ) {%>		alert("시정조치 정보를 저장 하였습니다.");		top.setNowProcessFalse();		top.view('<%=lmngno%>','<%=lyyyy%>','<%=lgb%>');		top.document.getElementById("divView").style.top="50px";		<%} else if( sql!= null && sql.equals("surveyDelete") && bAction.equals("T") ) {%>		alert("시정조치 정보를 삭제 하였습니다.");		top.setNowProcessFalse();		top.view('<%=lmngno%>','<%=lyyyy%>','<%=lgb%>');		top.document.getElementById("divView").style.top="50px";		<%} else {%>		top.setNowProcessFalse();		alert("<%=sMsg%>\n\n정보등록이 취소되었습니다.");		<%}%>	//]]	</script></head><body></body></html>