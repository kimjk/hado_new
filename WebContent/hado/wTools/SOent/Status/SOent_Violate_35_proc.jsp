<%@ page session="true" language="java" contentType="text/html; charset=utf-8" pageEncoding="utf-8"%><%/*** 프로젝트명	: 하도급거래 서면실태조사 지원을 위한 개발용역 사업* 프로그램명	: SOent_Violate_35_proc.jsp* 프로그램설명	: 수급사업자 > 조사결과분석 > 위반행위수 현황(수급사업자 응답)* 프로그램버전	: 1.0.1* 최초작성일자	: 2015년 09월 01일* 작 성 이 력       :*=========================================================*	작성일자		작성자명				내용*=========================================================*	2015-09-01	강슬기       페이지 최신화(주석, 불필요한 코드 제거, 오래된 코드 수정)*   2015-09-15   강슬기       2015년도 조사제외대상 조건 추가*   2016-01-07   이용광        DB변경으로 인한 인코딩 변경*//*== Update Remark =====================================================================================1. 일자 : 2012년 11월 13일2. 작성자 : (주)로티스아이 정광식3. 업데이트 내용   - db connection 개별 사용 후 리소스 반환 코딩	  - 원사업자 정보, 원사업자 응답 및 건설 업 추가	  - 쿼리생성 설명 추가=======================================================================================================*/%>
<%@ page import="java.sql.*"%><%@ page import="java.util.*"%><%@ page import="ftc.util.*"%><%@ page import="ftc.db.ConnectionResource"%><%@ page import="java.text.DecimalFormat"%>
<%@ include file="/hado/wTools/inc/WB_I_Global.jsp"%><%@ include file="/hado/wTools/inc/WB_I_chkMngSession.jsp"%><%@ include file="/hado/wTools/inc/WB_I_Function.jsp"%>
<%
/*---------------------------------------- Variable Difinition ----------------------------------------*/	String sErrorMsg = "";	// 오류메시지	String sReturnURL = "/index.jsp";	// 이동URL
	String tt = request.getParameter("tt")==null? "":request.getParameter("tt").trim();
	String comm = request.getParameter("comm")==null? "":request.getParameter("comm").trim();

	ConnectionResource resource = null;	Connection conn = null;	PreparedStatement pstmt = null;	ResultSet rs = null;
	String sSQLs = "";	String sSQLswhere = "";	String ptype = "";	String group_sql = "";	String order_sql = "";	String tmpStr = "";	String cc = "";
	ArrayList otype = new ArrayList();	ArrayList type_cd = new ArrayList();	ArrayList type_cnt = new ArrayList();
	String[] resp_cnt = new String[50];	String[][] violate_cnt = new String[50][12];	String[] tot_violate = new String[30];	String[] cnt_col = new String[12];	String[] typ_vio_cnt = new String[50];
	int nLoop = 1;	int otype_cnt = 0;	float tot_type = 0F;	float tot_subcon = 0F;	float tot_resp = 0F;	float tot_typ_vio = 0F;	int i = 0;	int typ_vio = 0;	int sStartYear = 2000;
	java.util.Calendar cal = java.util.Calendar.getInstance();	DecimalFormat formater = new java.text.DecimalFormat("###,###,###,###,###,###,###,##0.0");	DecimalFormat formater2 = new java.text.DecimalFormat("###,###,###,###,###,###,###,##0");
/*-----------------------------------------------------------------------------------------------------*/
/*=================================== Record Selection Processing =====================================*/	String tmpYear = request.getParameter("cyear")==null? "":request.getParameter("cyear").trim();
	if( !tmpYear.equals("") ) {		session.setAttribute("cyear", tmpYear);	} else {		session.setAttribute("cyear", st_Current_Year);	}
	if( tt.equals("start") ) {		session.setAttribute("wgb","");		session.setAttribute("cstatus","");	}	if( comm.equals("search") ) {		session.setAttribute("wgb", request.getParameter("wgb")==null? "":request.getParameter("wgb").trim());
		session.setAttribute("cstatus", request.getParameter("cstatus")==null? "":request.getParameter("cstatus").trim());	}
	int currentYear = st_Current_Year_n;	currentYear = Integer.parseInt(session.getAttribute("cyear")+"");	int endCurrentYear = st_Current_Year_n;
	/* 2012년 원사업자 관련 DB Table 분리 예외처리 시작 ============================================================> */	/* 업데이트 일자 : 2012년 11월 13일	   작성자 : 정광식	   비고 : Database 성능향상을 위하여 2012년부터 원사업자 테이블 분리			  HADO_TB_Oent --> HADO_TB_Oent_2012 */	String currentOent = "HADO_TB_Oent";
	if( currentYear>2011 ) {		currentOent = "HADO_TB_Oent_"+currentYear;	}	/* <============================================================== 2012년 원사업자 관련 DB Table 분리 예외처리 끝 */
	String wgb=session.getAttribute("wgb").toString();
	// 배열초기화	for(int x=1; x<=49; x++) {		for(int y=1; y<=11; y++) {			violate_cnt[x][y]="0";		}	}
	for(int x=1; x<=29; x++) {		tot_violate[x]="0";	}
	for(int x=1; x<=49; x++) {		resp_cnt[x]="0";		typ_vio_cnt[x]="0";	}
	/* 업종코드별 업종명 세팅 시작 =====================================================================================> */	sSQLs="SELECT Common_CD, Common_CD || '(' || Common_NM || ')' as_type FROM Common_CD \n";	if(currentYear >= 2012){		sSQLs+="WHERE Common_GB='010' \n";		if( currentYear == 2015 ) {
				sSQLs+="	AND Common_CD <>'G45' AND Common_CD <>'G46' AND Common_CD <>'G47' AND Common_CD <>'M70' \n";
		} 
	} else if( currentYear >= 2009 && wgb.equals("1") ) {		sSQLs+="WHERE Common_GB='002' \n";		sSQLs+="AND SUBSTR(Common_CD,1,1)<>'M' \n";	} else {		sSQLs+="WHERE Common_GB='002' \n";	}
	if( !session.getAttribute("wgb").equals("") ) {		sSQLs+="AND AddON_GB='"+session.getAttribute("wgb")+"' \n";	}
	sSQLs+="ORDER BY Common_CD \n";
	try {		resource=new ConnectionResource();		conn=resource.getConnection();		pstmt=conn.prepareStatement(sSQLs);		rs=pstmt.executeQuery();
		otype_cnt=1;
		while( rs.next() ) {			otype.add(StringUtil.checkNull(rs.getString("as_type")));			type_cd.add( rs.getString("Common_CD") );			otype_cnt++;		}
		rs.close();
		otype_cnt--;
	} catch(Exception e) {		e.printStackTrace();	} finally {		if(rs!=null)		try{rs.close();}	catch(Exception e){}		if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}		if(conn!=null)		try{conn.close();}	catch(Exception e){}		if(resource!=null)	resource.release();	}	/* <===================================================================================== 업종코드별 업종명 세팅 시작 */
	/* 검색 조건 세팅 ==================================================================================================> */	sSQLswhere="";	if( !session.getAttribute("wgb").toString().equals("") ) {		sSQLswhere="	AND (HADO_TB_Subcon_"+currentYear+".oent_gb='"+session.getAttribute("wgb")+"' \n";		sSQLswhere+="	AND HADO_TB_Subcon_"+currentYear+".Current_Year='"+currentYear+"') \n";		sSQLswhere+="	AND (CASE WHEN HADO_TB_Subcon_"+currentYear+".addr_status IS NULL then '1' else '0' end)='1' \n";		sSQLswhere+="	AND HADO_TB_Subcon_"+currentYear+".Return_GB IS NULL \n";		if(currentYear >= 2014){ 
			sSQLswhere+="	AND LENGTH(HADO_TB_Subcon_"+currentYear+".Mng_No) > 6 \n";
		} else {
			sSQLswhere+="	AND LENGTH(HADO_TB_Subcon_"+currentYear+".Mng_No) > 4 \n";		}
		sSQLswhere+="	AND SUBSTR(HADO_TB_Subcon_"+currentYear+".Mng_No,-7)<>'1234567' \n";	}	/* <================================================================================================== 검색 조건 세팅 */
	/* 업종별 제출업체 수 세팅 =========================================================================================> */
	/* 주의사항 : 제출업체 수 차이가 발생될경우 전송인데 반송 처리된건이 있는 것이니 정보 수정 후 확인 요함 */	sSQLs="SELECT NVL(b.oent_cnt,0) oent_cnt, a.common_cd FROM ( \n";	sSQLs+="	SELECT Common_CD FROM Common_CD \n";	if(currentYear >= 2012){		sSQLs+="	WHERE Common_GB='010' \n"; 
		if( currentYear == 2015 ) {
				sSQLs+="	AND Common_CD <>'G45' AND Common_CD <>'G46' AND Common_CD <>'G47' AND Common_CD <>'M70' \n";
		} 
	} else if( currentYear >= 2009 && wgb.equals("1") ) {		sSQLs+="	WHERE Common_GB='002' \n";		sSQLs+="	AND SUBSTR(Common_CD,1,1)<>'M' \n";	} else {		sSQLs+="	WHERE Common_GB='002' \n";	}	sSQLs+="	AND AddON_GB='"+session.getAttribute("wgb")+"' \n";	sSQLs+=") a LEFT JOIN ( \n";	sSQLs+="	SELECT NVL(COUNT(HADO_TB_Subcon_"+currentYear+".Mng_No),0) oent_cnt, "+currentOent+".oent_type FROM "+currentOent+", HADO_TB_Subcon_"+currentYear+" \n";	sSQLs+="	WHERE "+currentOent+".Mng_No=HADO_TB_Subcon_"+currentYear+".Mng_No \n";	sSQLs+="	AND "+currentOent+".Current_Year=HADO_TB_Subcon_"+currentYear+".Current_Year \n";	sSQLs+="	AND "+currentOent+".oent_gb=HADO_TB_Subcon_"+currentYear+".oent_gb \n";	sSQLs+="	AND HADO_TB_Subcon_"+currentYear+".sent_status='1' \n";	sSQLs+="	AND HADO_TB_Subcon_"+currentYear+".addr_status IS NULL \n";
	/* 2015-09-15 / 강슬기 / 2015년도 조사제외대상 조건 추가 
	if( currentYear>=2015 ) {
		sSQLs+="		AND HADO_TB_Subcon_"+currentYear+".sp_fld_03 IS NULL \n";
	}
	*/
	if( currentYear>=2015 ) {
		sSQLs+="		AND HADO_TB_Subcon_"+currentYear+".sp_fld_03 IS NULL \n";
	}
	sSQLs+=sSQLswhere;	sSQLs+="	GROUP BY "+currentOent+".oent_type \n";	sSQLs+=") b ON a.common_cd=b.oent_type \n";	sSQLs+="ORDER BY a.common_cd \n";
//System.out.print(sSQLs);	try {		resource=new ConnectionResource();		conn=resource.getConnection();
		pstmt=conn.prepareStatement(sSQLs);		rs=pstmt.executeQuery();
		while( rs.next() ) {			String tmpCnt = rs.getString("oent_cnt")==null ? "0":rs.getString("oent_cnt");			type_cnt.add( tmpCnt );			tot_type+=Float.parseFloat( tmpCnt );		}
		rs.close();
	} catch(Exception e) {		e.printStackTrace();	} finally {		if(rs!=null)		try{rs.close();}	catch(Exception e){}		if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}		if(conn!=null)		try{conn.close();}	catch(Exception e){}		if(resource!=null)	resource.release();	}
	/* <========================================================================================= 업종별 제출업체 수 세팅 */
	/* 코드 미사용 =====================================================================================================>	sSQLs="SELECT NVL(b.subcon_cnt,0) subcon_cnt, a.common_cd FROM ";	sSQLs+="(SELECT Common_CD FROM Common_CD WHERE Common_GB='002' AND AddON_GB='"+session.getAttribute("wgb")+"' ";	if(currentYear >= 2009) {		sSQLs+="AND SUBSTR(Common_CD,1,1)<>'M' ";	}	sSQLs+=") a ";	sSQLs+="LEFT JOIN ( ";	sSQLs+="SELECT NVL(count(HADO_TB_Subcon_"+currentYear+".Mng_No),0) subcon_cnt, "+currentOent+".oent_type FROM "+currentOent+", HADO_TB_Subcon_"+currentYear+" ";	sSQLs+="WHERE "+currentOent+".Mng_No=HADO_TB_Subcon_"+currentYear+".Mng_No AND "+currentOent+".Current_Year=HADO_TB_Subcon_"+currentYear+".Current_Year AND ";	sSQLs+=""+currentOent+".oent_gb=HADO_TB_Subcon_"+currentYear+".oent_gb AND HADO_TB_Subcon_"+currentYear+".sent_status='1' ";	//sSQLs+="(HADO_TB_Subcon_"+currentYear+".Subcon_Type='2' OR HADO_TB_Subcon_"+currentYear+".Subcon_Type='3') ";	sSQLs+=sSQLswhere;	sSQLs+=" GROUP BY "+currentOent+".oent_type) b ON a.common_cd=b.oent_type ORDER BY a.common_cd";
//System.out.print(sSQLs);	try {		resource=new ConnectionResource();		conn=resource.getConnection();
		pstmt=conn.prepareStatement(sSQLs);		rs=pstmt.executeQuery();
		while( rs.next() ) {			//type_cnt.add( rs.getString("subcon_cnt") );			tot_subcon=tot_subcon+Float.parseFloat( rs.getString("subcon_cnt") );		}		rs.close();	} catch(Exception e) {		e.printStackTrace();	} finally {		if(rs!=null)		try{rs.close();}	catch(Exception e){}		if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}		if(conn!=null)		try{conn.close();}	catch(Exception e){}		if(resource!=null)	resource.release();	}	<======================================================================================================= 코드 미사용 */
	if( !tt.equals("start") ) {		sSQLs="SELECT a.Common_CD oent_type, NVL(b.typecnt,0) FROM ( \n";		sSQLs+="	SELECT Common_CD FROM Common_CD ";		/* 2012년 업종코드 체계 변경 적용 시작		   1. 일시 : 2012-11-13		   2. 작성자 : 정광식 */		if(currentYear >= 2012){			sSQLs+="	WHERE Common_GB='010' \n"; 
		   if( currentYear == 2015 ) {
				sSQLs+="	AND Common_CD <>'G45' AND Common_CD <>'G46' AND Common_CD <>'G47' AND Common_CD <>'M70' \n";
			} 
		} else if( currentYear >= 2009 && wgb.equals("1") ) {			sSQLs+="	WHERE Common_GB='002' \n";			sSQLs+="	AND SUBSTR(Common_CD,1,1)<>'M' \n";		} else {			sSQLs+="	WHERE Common_GB='002' \n";		}		sSQLs+=" AND AddON_GB='"+session.getAttribute("wgb")+"' \n";		/* // 2012년 업종코드 체계 변경 적용 끝 */		sSQLs+=") a LEFT JOIN ( \n";		sSQLs+="	select oent_type, sum(c_cnt) typecnt from( \n";
		if( currentYear<2006) {			sSQLs+="		SELECT C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 1,4) oent_type, \n";		} else if( currentYear==2006 || currentYear==2011 ) { // 조건 수정(정광식 2012-11-13)			sSQLs+="		SELECT C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 2,4) oent_type, \n";		} else if( currentYear>=2012 ) { // 조건 수정(정광식 2012-11-13)			sSQLs+="		SELECT C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 2,3) oent_type, \n";		} else {			sSQLs+="		SELECT C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 3,4) oent_type, \n";		}
		sSQLs+="		CASE WHEN COUNT(C.Mng_No)>=1 THEN 1 ELSE 0 END c_cnt \n";		sSQLs+="		FROM HADO_TB_SOent_Answer_"+currentYear+" C LEFT JOIN HADO_TB_Subcon_"+currentYear+" D \n";		sSQLs+="		ON C.Mng_No=D.Child_Mng_No AND C.Current_Year=D.Current_Year AND C.Oent_GB=D.Oent_GB \n";		sSQLs+="		WHERE C.Current_Year='"+currentYear+"' AND C.Oent_GB='"+session.getAttribute("wgb")+"' \n";		sSQLs+="		AND D.Sent_Status='1' AND D.Addr_Status IS NULL \n";
		/* 2015-09-15 / 강슬기 / 2015년도 조사제외대상 조건 추가 
		if( currentYear>=2015 ) {
			sSQLs+="		AND D.sp_fld_03 IS NULL \n";
		}
		*/
		if( currentYear>=2015 ) {
			sSQLs+="		AND D.sp_fld_03 IS NULL \n";
		}
		if( currentYear<2006) {			sSQLs+="		GROUP BY C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 1,4) \n";		} else if( currentYear==2006 || currentYear==2011 ) { // 조건 수정(정광식 2012-11-13)			sSQLs+="		GROUP BY C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 2,4) \n";		} else if( currentYear>=2012 ) { // 조건 수정(정광식 2012-11-13)			sSQLs+="		GROUP BY C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 2,3) \n";		} else {			sSQLs+="		GROUP BY C.Mng_No, C.Oent_GB, C.Sent_No, SUBSTR(C.Mng_No, 3,4) \n";		}
		sSQLs+="	) vi_temp GROUP BY oent_type \n";		sSQLs+=") b ON a.common_cd=b.oent_type ORDER BY a.common_cd \n";//
System.out.print(sSQLs);		try {			resource=new ConnectionResource();			conn=resource.getConnection();
			pstmt=conn.prepareStatement(sSQLs);			rs=pstmt.executeQuery();
			nLoop=1;
			while( rs.next() ) {				ptype=rs.getString("oent_type");				tmpStr=""+type_cd.get(nLoop-1);				if( tmpStr.equals(ptype) ) {					resp_cnt[nLoop]=rs.getString(2);					tot_resp=tot_resp+Float.parseFloat( rs.getString(2) );					nLoop++;				} else {					resp_cnt[nLoop]="0";					nLoop++;				}			}
			rs.close();
		} catch(Exception e) {			e.printStackTrace();		} finally {			if(rs!=null)		try{rs.close();}	catch(Exception e){}			if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}			if(conn!=null)		try{conn.close();}	catch(Exception e){}			if(resource!=null)	resource.release();		}
		/* 2012년 수급사업자 관련 DB Table 분리 예외처리 시작 ==========================================================> */		/* 업데이트 일자 : 2012년 11월 13일		   작성자 : 정광식		   비고 : Database 성능향상을 위하여 2012년부터 원사업자 테이블 분리				  HADO_TB_Oent --> HADO_TB_Oent_2012 */		String sSOentAnswerTNM = "HADO_TB_SOent_Answer";
		if( currentYear>1999 ) {			sSOentAnswerTNM = "HADO_TB_SOent_Answer_"+currentYear;		}		/* <============================================================ 2012년 수급사업자 관련 DB Table 분리 예외처리 끝 */
		cnt_col[1]="cnt_one";		cnt_col[2]="cnt_two";		cnt_col[3]="cnt_three";		cnt_col[4]="cnt_four";		cnt_col[5]="cnt_five";		cnt_col[6]="cnt_six";		cnt_col[7]="cnt_seven";		cnt_col[8]="cnt_eight";		cnt_col[9]="cnt_nine";		cnt_col[10]="cnt_ten";		cnt_col[11]="cnt_etc";
		sSQLs="SELECT "+currentOent+".oent_type, HADO_TB_Subcon_"+currentYear+".Mng_No, HADO_TB_Subcon_"+currentYear+".sent_no, HADO_TB_Subcon_"+currentYear+".oent_gb, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 1 THEN 1 ELSE 0 END cnt_one, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 2 THEN 1 ELSE 0 END cnt_two, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 3 THEN 1 ELSE 0 END cnt_three, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 4 THEN 1 ELSE 0 END cnt_four, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 5 THEN 1 ELSE 0 END cnt_five, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 6 THEN 1 ELSE 0 END cnt_six, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 7 THEN 1 ELSE 0 END cnt_seven, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 8 THEN 1 ELSE 0 END cnt_eight, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 9 THEN 1 ELSE 0 END cnt_nine, ";		sSQLs+="CASE COUNT("+sSOentAnswerTNM+".Mng_No) WHEN 10 THEN 1 ELSE 0 END cnt_ten, ";		sSQLs+="CASE WHEN COUNT("+sSOentAnswerTNM+".Mng_No)>10 THEN 1 ELSE 0 END cnt_etc ";		sSQLs+="FROM "+sSOentAnswerTNM+", HADO_TB_SOent_Question, "+currentOent+", HADO_TB_Subcon_"+currentYear+" ";		sSQLs+="WHERE ( HADO_TB_Subcon_"+currentYear+".oent_gb="+sSOentAnswerTNM+".oent_gb ) AND ( HADO_TB_Subcon_"+currentYear+".Child_Mng_No="+sSOentAnswerTNM+".Mng_No) AND ";		sSQLs+="HADO_TB_Subcon_"+currentYear+".Current_Year="+sSOentAnswerTNM+".Current_Year AND HADO_TB_Subcon_"+currentYear+".sent_no="+sSOentAnswerTNM+".sent_no AND ";		sSQLs+=""+currentOent+".Mng_No=HADO_TB_Subcon_"+currentYear+".Mng_No AND "+currentOent+".Current_Year=HADO_TB_Subcon_"+currentYear+".Current_Year AND ";		sSQLs+=""+currentOent+".oent_gb=HADO_TB_Subcon_"+currentYear+".oent_gb AND HADO_TB_Subcon_"+currentYear+".Addr_Status IS NULL AND ";		sSQLs+="( HADO_TB_Subcon_"+currentYear+".sent_status='1') AND ";		sSQLs+="( "+sSOentAnswerTNM+".oent_gb=HADO_TB_SOent_Question.oent_gb ) AND ";		sSQLs+="( "+sSOentAnswerTNM+".Current_Year=HADO_TB_SOent_Question.Current_Year ) AND ";		sSQLs+="( "+sSOentAnswerTNM+".soent_q_cd=HADO_TB_SOent_Question.soent_q_cd ) AND ";		sSQLs+="( "+sSOentAnswerTNM+".soent_q_gb=HADO_TB_SOent_Question.soent_q_gb ) AND ";		sSQLs+="(( NVL("+sSOentAnswerTNM+".a,2)=NVL(HADO_TB_SOent_Question.chk_v_a,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".b,2)=NVL(HADO_TB_SOent_Question.chk_v_b,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".c,2)=NVL(HADO_TB_SOent_Question.chk_v_c,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".d,2)=NVL(HADO_TB_SOent_Question.chk_v_d,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".e,2)=NVL(HADO_TB_SOent_Question.chk_v_e,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".f,2)=NVL(HADO_TB_SOent_Question.chk_v_f,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".g,2)=NVL(HADO_TB_SOent_Question.chk_v_g,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".h,2)=NVL(HADO_TB_SOent_Question.chk_v_h,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".i,2)=NVL(HADO_TB_SOent_Question.chk_v_i,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".j,2)=NVL(HADO_TB_SOent_Question.chk_v_j,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".k,2)=NVL(HADO_TB_SOent_Question.chk_v_k,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".l,2)=NVL(HADO_TB_SOent_Question.chk_v_l,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".m,2)=NVL(HADO_TB_SOent_Question.chk_v_m,3) ) OR ";		sSQLs+="( NVL("+sSOentAnswerTNM+".n,2)=NVL(HADO_TB_SOent_Question.chk_v_n,3) )) AND HADO_TB_Subcon_"+currentYear+".oent_gb='"+session.getAttribute("wgb")+"' ";		group_sql="GROUP BY "+currentOent+".oent_type, HADO_TB_Subcon_"+currentYear+".Mng_No, HADO_TB_Subcon_"+currentYear+".sent_no, HADO_TB_Subcon_"+currentYear+".oent_gb ";		order_sql="ORDER BY "+currentOent+".oent_type";		sSQLswhere=" AND HADO_TB_Subcon_"+currentYear+".Current_Year='"+currentYear+"'";
		if( !session.getAttribute("cstatus").equals("") ) {			sSQLswhere+=" AND HADO_TB_SOent_Question.money_gb ='"+session.getAttribute("cstatus")+"'";		}
		sSQLs=sSQLs+sSQLswhere+group_sql+order_sql;
//System.out.print(sSQLs);		try {			resource=new ConnectionResource();			conn=resource.getConnection();			pstmt=conn.prepareStatement(sSQLs);			rs=pstmt.executeQuery();
			i=0;
			while( rs.next() ) {				ptype=rs.getString("oent_type");				if( !cc.equals(ptype) ) {					if( i!=0 ) {						tmpStr=""+type_cd.get(i-1);						if( cc.equals(tmpStr) ) {							typ_vio_cnt[i]=""+typ_vio;							tot_typ_vio=tot_typ_vio+Float.parseFloat(typ_vio_cnt[i]);						} else {							typ_vio_cnt[i]="0";							for(int j=1 ; j<=11; j++) {								violate_cnt[i+1][j]=violate_cnt[i][j];								violate_cnt[i][j]="0";							}							i++;							typ_vio_cnt[i]=""+typ_vio;							tot_typ_vio=tot_typ_vio+Float.parseFloat(typ_vio_cnt[i]);						}					}					i++;					cc=ptype;					typ_vio=0;				}				typ_vio++;				for(int j=1; j<=11; j++) {					tmpStr=rs.getString(cnt_col[j]);					if( (!tmpStr.equals("")) && (!tmpStr.equals("0")) ) {						if( violate_cnt[i][j]==null || violate_cnt[i][j].equals("") ) {							violate_cnt[i][j]="1";						} else {							violate_cnt[i][j]=""+(Integer.parseInt(violate_cnt[i][j])+1);						}						if( tot_violate[j]==null || tot_violate[j].equals("") ) {							tot_violate[j]="1";						} else {							tot_violate[j]=""+(Integer.parseInt(tot_violate[j])+1);						}					}				}			}			rs.close();
			typ_vio_cnt[i]=""+typ_vio;			tot_typ_vio=tot_typ_vio+Float.parseFloat(typ_vio_cnt[i]);		} catch(Exception e) {			e.printStackTrace();		} finally {			if(rs!=null)		try{rs.close();}	catch(Exception e){}			if(pstmt!=null)		try{pstmt.close();}	catch(Exception e){}			if(conn!=null)		try{conn.close();}	catch(Exception e){}			if(resource!=null)	resource.release();		}	}%><meta charset="utf-8">
<script type="text/javascript">//<![CDATA[content = "";content+="<table class='resultTable'>";content+="	<tr>";content+="		<th rowspan=2>구분</th>";content+="		<th rowspan=2>제출업체수(A)</th>";content+="		<th rowspan=2>하도급거래업체수(B)</th>";content+="		<th rowspan=2>응답업체수(C)</th>";content+="		<th rowspan=2>위반업체수(D)</th>";content+="		<th rowspan=2>미위반업체수(E)</th>";content+="		<th colspan=4>비율(%)</th>";content+="		<th colspan=11>업체별 위반행위수</th>";content+="	</tr>";content+="	<tr>";content+="		<th>B/A</th>";content+="		<th>C/A</th>";content+="		<th>D/C</th>";content+="		<th>E/C</th>";content+="		<th>1</th>";content+="		<th>2</th>";content+="		<th>3</th>";content+="		<th>4</th>";content+="		<th>5</th>";content+="		<th>6</th>";content+="		<th>7</th>";content+="		<th>8</th>";content+="		<th>9</th>";content+="		<th>10</th>";content+="		<th>10 초과</th>";content+="	</tr>";
<%if( !tt.equals("start") ) {%>content+="	<tr onMouseOver='tbRow_Over(this)' onMouseOut='tbRow_Out(this)'>";content+="		<th rowspan=2>계</th>";content+="		<td rowspan=2><%=formater2.format(tot_type)%></td>";content+="		<td rowspan=2><%=formater2.format(tot_resp)%></td>";content+="		<td rowspan=2><%=formater2.format(tot_resp)%></td>";content+="		<td rowspan=2><%=formater2.format(tot_typ_vio)%></td>";content+="		<td rowspan=2><%=formater2.format(tot_resp - tot_typ_vio)%></td>";content+="		<td rowspan=2><%=formater.format(tot_resp/tot_type*100)%>%</td>";content+="		<td rowspan=2><%=formater.format(tot_resp/tot_type*100)%>%</td>";content+="		<td rowspan=2><%=formater.format(tot_typ_vio/tot_resp*100)%>%</td>";content+="		<td rowspan=2><%=formater.format(((tot_resp - tot_typ_vio)/tot_resp)*100)%>%</td>";	<%for(int j=1; j<=11; j++) {%>content+="		<td><%if( tot_violate[j]==null || tot_violate[j].equals("") ) { tot_violate[j] = "0";%>0<%}else{%><%=tot_violate[j]%><%}%></td>";	<%}%>content+="	</tr>";content+="	<tr onMouseOver='tbRow_Over(this)' onMouseOut='tbRow_Out(this)'>";	<%for(int j=1; j<=11; j++) {		i = 0;%>content+="		<td>";			<%for(int k=j; k<=11; k++) {				if( tot_violate[k]!=null && (!tot_violate[k].equals("")) ) {					i = i+Integer.parseInt(tot_violate[k]);				}			}%>content+="			<%=i%>";content+="		</td>";	<%}%>content+="	</tr>";<%}%><%if( !tt.equals("start") ) {String check = "no";int cno = 0;for(int k=1; k<=otype_cnt; k++) {%>	<%cno++;%>	<%if( type_cnt.size() == cno-1 ) {		check = "yes";		cno = cno-1;	}%>	<%if( check.equals("no") ) {		tmpStr = ""+type_cnt.get(k-1);%>content+="	<tr onMouseOver='tbRow_Over(this)' onMouseOut='tbRow_Out(this)'>";content+="		<th rowspan=2 style='text-align:left;'><%=otype.get(k-1)%></th>";content+="		<td rowspan=2><%=type_cnt.get(k-1)%></td>";content+="		<td rowspan=2><%=resp_cnt[k]%></td>";content+="		<td rowspan=2><%=resp_cnt[k]%></td>";content+="		<td rowspan=2><%=typ_vio_cnt[k]%></td>";content+="		<td rowspan=2><%=(Float.parseFloat(resp_cnt[k]) - Float.parseFloat(typ_vio_cnt[k]))%></td>";content+="		<td rowspan=2><%if( Integer.parseInt(tmpStr) > 0 ) {%><%=formater.format(Float.parseFloat(resp_cnt[k]) / Float.parseFloat(tmpStr) *100)%><%} else {%>0.0<%}%>%</td>";content+="		<td rowspan=2><%if( Integer.parseInt(tmpStr) > 0 ) {%><%=formater.format(Float.parseFloat(resp_cnt[k]) / Float.parseFloat(tmpStr) *100)%><%} else {%>0.0<%}%>%</td>";content+="		<td rowspan=2><%if( Integer.parseInt(tmpStr) > 0 && Float.parseFloat(typ_vio_cnt[k]) > 0 ) {%><%=formater.format( Float.parseFloat(typ_vio_cnt[k]) / Float.parseFloat(resp_cnt[k]) *100)%><%} else {%>0.0<%}%>%</td>";content+="		<td rowspan=2><%if( Integer.parseInt(tmpStr) > 0 && Float.parseFloat(resp_cnt[k]) > 0 ) {%><%=formater.format( (Float.parseFloat(resp_cnt[k]) - Float.parseFloat(typ_vio_cnt[k])) / Float.parseFloat(tmpStr) * 100)%><%} else {%>0.0<%}%>%</td>";			<%for(int x=1; x<=11; x++) {%>content+="		<td><%if( violate_cnt[k][x]==null || violate_cnt[k][x].equals("") ) { violate_cnt[k][x] = "0";%>0<%} else {%><%=violate_cnt[k][x]%><%}%></td>";			<%}%>content+="	</tr>";content+="	<tr onMouseOver='tbRow_Over(this)' onMouseOut='tbRow_Out(this)'>";			<%for(int j=1; j<=11; j++) {				i = 0;%>content+="		<td>";					<%for(int y=j; y<=11; y++) {						if( violate_cnt[k][y]!=null && (!violate_cnt[k][y].equals("")) ) {							i = i+Integer.parseInt(violate_cnt[k][y]);						}					}%>content+="			<%=i%>";content+="		</td>";			<%}%>content+="	</tr>";	<%} else {%>content+="	<tr onMouseOver='tbRow_Over(this)' onMouseOut='tbRow_Out(this)'>";content+="		<th rowspan=2 style='text-align:left;'><%=otype.get(k-1)%></th>";content+="		<td rowspan=2>0</td>";content+="		<td rowspan=2>0</td>";content+="		<td rowspan=2>0</td>";content+="		<td rowspan=2>0</td>";content+="		<td rowspan=2>0</td>";content+="		<td rowspan=2>0%</td>";content+="		<td rowspan=2>0%</td>";content+="		<td rowspan=2>0%</td>";content+="		<td rowspan=2>0%</td>";			<%for(int x=1; x<=11; x++) {%>content+="		<td>0</td>";			<%}%>content+="	</tr>";content+="	<tr onMouseOver='tbRow_Over(this)' onMouseOut='tbRow_Out(this)'>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="		<td>0</td>";content+="	</tr>";		<%}%>	<%}%><%}%>content+="</table>";
top.document.getElementById("divResult").innerHTML = content;top.setNowProcessFalse();//]]</script>